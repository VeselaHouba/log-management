filter {
  ######## POSTGRES ############
  if ( [fields][logtype] == "postgres" ) {
    grok {
      patterns_dir => "/etc/logstash/patterns/"
      match => {
        "message" => [
          '%{POSTGRESQL2}','%{POSTGRESQL3}','%{POSTGRESQL4}'
        ]
      }
    }
    date {
      match => [
        "datetime",
        "yyyy-MM-dd HH:mm:ss",
        "yyyy-MM-dd HH:mm:ss.SSS"
      ]
    }

  ######### NGINX ACCESS ###
  } else if ( [fields][logtype] == "nginx_access" ) {
    grok {
      patterns_dir => "/etc/logstash/patterns/"
      match => {
        "message" => [
          '%{NGINXACCESS3}'
        ]
      }
    }
    date {
      match => [
        "datetime",
        "dd/MMM/yyyy:HH:mm:ss Z"
      ]
    }

  ######### OTHER ##########
  } else {
    grok {
      patterns_dir => "/etc/logstash/patterns/"
      match => {
        "message" => [
          '%{SYSLOG_JSON}',
          '%{TIMESTAMP_ISO8601:datetime}:%{DATA:UUID}:%{LOGLEVEL:Loglevel}:%{DATA:LoggerName}:%{GREEDYDATA:msg}',
          '%{NGINXACCESS2}',
          '%{SYSLOG}',
          '.*?\[%{S_TIMESTAMP:datetime}\].*?'
        ]
      }
    }
    date {
      match => ["datetime",
        "ISO8601",
        "yyyy-MM-dd HH:mm:ss.SSSSSS",
        "yyyy-MM-dd HH:mm:ss.SSS",
        "yyyy-MM-dd HH:mm:ss"
      ]
    }
    # extract status code from response
    if ( [LoggerName] =~ "response.status" ) {
      grok {
        match => {
          "msg" => "%{NUMBER:StatusCode:int}"
        }
      }
    }
  }
}
